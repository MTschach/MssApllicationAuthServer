   /*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'jacoco'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

apply from: 'https://raw.githubusercontent.com/MTschach/MssUtils/master/deploy.gradle'

apply from: 'https://raw.githubusercontent.com/MTschach/MssUtils/master/artifactory.gradle'

apply from: 'https://raw.githubusercontent.com/MTschach/MssUtils/master/eclipse.gradle'

def artifact = new Properties()
artifact.load(new FileInputStream("${project.projectDir}${File.separator}..${File.separator}deploy.settings"))

buildscript {
   apply from: 'https://raw.githubusercontent.com/MTschach/MssUtils/master/buildscript.gradle'
}

apply plugin: 'de.jjohannes.extra-java-module-info'

extraJavaModuleInfo {
   automaticModule('commons-beanutils-1.9.4.jar', '')
   automaticModule('commons-cli-1.5.0.jar', '')
   automaticModule('commons-codec-1.11.jar', '')
   automaticModule('commons-collections-3.2.2.jar', '')
   automaticModule('commons-lang3-3.12.0.jar', '')
   automaticModule('commons-logging-1.2.jar', '')
   automaticModule('flyway-core-8.0.4.jar', '')
   automaticModule('httpclient-4.5.13.jar', '')
   automaticModule('httpcore-4.4.13.jar', '')
   automaticModule('javax.activation-api-1.2.0.jar', '')
   automaticModule('.jar', '')
   automaticModule('jersey-client-3.0.4.jar', '')
   automaticModule('jersey-common-3.0.4.jar', '')
   automaticModule('jersey-container-servlet-3.0.4.jar', '')
   automaticModule('jersey-container-servlet-core-3.0.4.jar', '')
   automaticModule('jersey-server-3.0.4.jar', '')
   automaticModule('log4j-core-2.17.2.jar', '')
   automaticModule('log4j-slf4j-impl-2.17.2.jar', '')
   automaticModule('mysql-connector-java-8.0.11.jar', '')
   automaticModule('osgi-resource-locator-1.0.3.jar', '')
   automaticModule('protobuf-java-2.6.0.jar', '')

   module('jdbc-1.16.3.jar', 'org.testcontainers.jdbc', '1.16.3') {
      exports('')
   }
   module('mysql-1.16.3.jar', 'org.testcontainers.mysql', '1.16.3') {
      exports('')
   }
   module('testcontainers-1.16.3.jar', 'org.testcontainers.', '1.16.3') {
      exports('org.testcontainers')
      exports('org.testcontainers.containers')
   }
   automaticModule('cglib-nodep-3.2.9.jar', '')
   automaticModule('database-commons-1.16.3.jar', '')
   automaticModule('dbunit-2.7.3.jar', '')
   automaticModule('docker-java-api-3.2.12.jar', '')
   automaticModule('docker-java-transport-3.2.12.jar', '')
   automaticModule('docker-java-transport-zerodep-3.2.12.jar', '')
   automaticModule('duct-tape-1.0.8.jar', '')
   automaticModule('hamcrest-core-1.3.jar', '')
   automaticModule('javassist-3.27.0-GA.jar', '')
   automaticModule('junit-jupiter-1.16.3.jar', '')
   automaticModule('powermock-api-easymock-2.0.9.jar', '')
   automaticModule('powermock-api-support-2.0.9.jar', '')
   automaticModule('powermock-core-2.0.9.jar', '')
   automaticModule('powermock-module-junit4-2.0.9.jar', '')
   automaticModule('powermock-module-junit4-common-2.0.9.jar', '')
   automaticModule('powermock-reflect-2.0.9.jar', '')
   automaticModule('ojdbc8-19.3.0.0.jar', '')
   automaticModule('ons-19.3.0.0.jar', '')
   automaticModule('oraclepki-19.3.0.0.jar', '')
   automaticModule('osdt_cert-19.3.0.0.jar', '')
   automaticModule('osdt_core-19.3.0.0.jar', '')
   automaticModule('simplefan-19.3.0.0.jar', '')
   automaticModule('ucp-19.3.0.0.jar', '')
}

configurations {
   genClasses
   implementation
   testImplementation.extendsFrom implementation
}

sourceSets {
   main {
      java {
         srcDir 'src'
         srcDir '../client/gen'
         srcDir '../client/common'
         srcDir 'gen'
      }
   }
   
   test {
      java {
         srcDir 'test'
         srcDir '../client/testcom'
      }
   }
}


dependencies {
   implementation       group: 'Mss'                                          , name: 'MssUtils'                        , version: 'latest.release'
   implementation       group: 'Mss'                                          , name: 'MssDbUtils'                      , version: 'latest.release'
   implementation       group: 'Mss'                                          , name: 'MssNetUtils'                     , version: 'latest.release'
   implementation       group: 'Mss'                                          , name: 'MssConfigTools'                  , version: 'latest.release'
   implementation       group: 'Mss'                                          , name: 'MssCronJobTools'                 , version: 'latest.release'
   implementation       group: 'Mss'                                          , name: 'MssDbMigration'                  , version: 'latest.release'
   implementation       group: 'javax.ws.rs'                                  , name: 'javax.ws.rs-api'                 , version: "${javaxRsApiVersion}"
   implementation       group: 'org.eclipse.jetty'                            , name: 'jetty-servlet'                   , version: "${jettyVersion}"
   implementation       group: 'com.fasterxml.jackson.core'                   , name: 'jackson-core'                    , version: "${jacksonVersion}"
   implementation       group: 'com.fasterxml.jackson.core'                   , name: 'jackson-databind'                , version: "${jacksonVersion}"
   implementation       group: 'com.fasterxml.jackson.core'                   , name: 'jackson-annotations'             , version: "${jacksonVersion}"
   implementation       group: 'org.apache.logging.log4j'                     , name: 'log4j-core'                      , version: "${loggingVersion}"
   implementation       group: 'org.apache.logging.log4j'                     , name: 'log4j-api'                       , version: "${loggingVersion}"
   implementation       group: 'org.apache.logging.log4j'                     , name: 'log4j-slf4j-impl'                , version: "${loggingVersion}"
   implementation       group: 'javax.xml.bind'                               , name: 'jaxb-api'                        , version: "${jaxbApiVersion}"
   implementation       group: 'commons-cli'                                  , name: 'commons-cli'                     , version: "${commonsCliVersion}"
   implementation       group: 'mysql'                                        , name: 'mysql-connector-java'            , version: "${mysqlConnectorVersion}"

   // Use JUnit test framework
   testImplementation   group: 'Mss'                                          , name: 'MssDbTestTools'               	, version: 'latest.release'
   testImplementation   group: 'org.junit.jupiter'                            , name: 'junit-jupiter-engine'            , version: "${junitVersion}"
   testImplementation   group: 'org.powermock'                                , name: 'powermock-module-junit4'         , version: "${powerMockVersion}"
   testImplementation   group: 'org.powermock'                                , name: 'powermock-api-easymock'          , version: "${powerMockVersion}"
   testImplementation   group: 'org.dbunit'                                   , name: 'dbunit'                          , version: "${dbUnitVersion}"
   testImplementation   group: 'org.testcontainers'                           , name: 'testcontainers'                  , version: "${testcontainersVersion}"
   testImplementation   group: 'org.testcontainers'                           , name: 'mysql'                           , version: "${testcontainersVersion}"
   testImplementation   group: 'org.testcontainers'                           , name: 'junit-jupiter'                   , version: "${testcontainersVersion}"

   genClasses           group: 'Mss'                                          , name: 'MssXml2Class'                    , version: 'latest.release'
   genClasses           group: 'Mss'                                          , name: 'MssUtils'                        , version: 'latest.release'
   genClasses           group: 'Mss'                                          , name: 'MssConfigTools'                  , version: 'latest.release'
}


compileJava.dependsOn(':MssApplicationAuthClient:genClasses')


jar {
   dependsOn 'serverJar'
}


task genClasses {
   dependsOn ('genDbParams');
}

task genParams(type:JavaExec) {
   group 'gen'
   workingDir = "${rootDir}/server"
   main      = "de.mss.xml2class.Xml2Class"
   classpath {[
      configurations.genClasses
   ]}
   args '-t', 'templates/client', '-i', '../params/client', '-o', 'gen'
}


task genDbParams(type:JavaExec) {
   group 'gen'
   workingDir = "${rootDir}/server"
   main      = "de.mss.xml2class.Xml2Class"
   classpath {[
      configurations.genClasses
   ]}
   args '-t', 'templates/db', '-i', '../params/db', '-o', 'gen'
}


clean.doFirst {
   delete "${rootDir}/gen"
}


task serverJar(type: Jar) {
   duplicatesStrategy = DuplicatesStrategy.EXCLUDE
   manifest {
      attributes "Main-Class": "de.mss.applicationauth.server.ApplicationAuthServer"
   }
   baseName = "${rootProject.name}" + 'Server-' + artifact.version
   from(sourceSets.main.output)
   from {
      configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
   }
   with jar
}

// disable publication
tasks.withType(PublishToMavenLocal) {
    onlyIf {
        publication == 'TEST'
    }
}

jacocoTestReport {
   dependsOn test
   reports {
      xml.required = true
   }
}


test {
    useJUnitPlatform()
}


// Define the main class for the application
mainClassName = 'de.mss.applicationauth.server.ApplicationAuthServer'
